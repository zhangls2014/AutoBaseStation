apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.zhangls.auto"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 4
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "arm64-v8a", "x86", "x86_64"
        }
    }

    signingConfigs {
        release {
            storeFile file("./AutoBaseStation.jks")
            storePassword "AutoBaseStation0318"
            keyAlias "zhanglsStation"
            keyPassword "zhangls2018"
        }
    }

    buildTypes {
        debug {
            // 签名规则
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // 签名规则
            signingConfig signingConfigs.release

            // 控制打包输出包名
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = outputFile.name.replace("app",
                                "AutoBaseStation_No_${defaultConfig.versionCode}_${releaseTime()}")
                        outputFileName = fileName
                    }
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

configurations.all {
    // 强制统一 support 库的版本
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.1.0'
            }
        }
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-common:$anko_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'android.arch.lifecycle:extensions:1.1.0'
    implementation 'android.arch.lifecycle:common-java8:1.1.0'
    implementation 'android.arch.persistence.room:runtime:1.1.0-alpha3'
    kapt "android.arch.persistence.room:compiler:1.1.0-alpha3"
    implementation 'com.yanzhenjie:permission:2.0.0-rc3'
    implementation 'me.drakeet.multitype:multitype-kotlin:3.4.4'
    implementation 'com.amap.api:location:3.8.0'
    implementation('com.github.bumptech.glide:glide:4.6.1') {
        exclude group: 'com.android.support'
    }
    implementation 'com.android.support:support-fragment:26.1.0'
    kapt 'com.github.bumptech.glide:compiler:4.6.1'
}
